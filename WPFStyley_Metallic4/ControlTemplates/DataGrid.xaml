<?xml version="1.0" encoding="utf-8" ?>
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:collections="clr-namespace:System.Collections;assembly=mscorlib"
                    xmlns:media="http://schemas.microsoft.com/netfx/2007/xaml/presentation, System.Windows.Media"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2006" 
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                    mc:Ignorable="d">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="..\Themes\Colors.xaml"/>
        <ResourceDictionary Source="..\Themes\Fonts.xaml"/>
        <ResourceDictionary Source="..\Controltemplates\Checkbox.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="8"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="SizeWE"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}"
                    Background="{TemplateBinding Background}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type DataGridCell}">
        <Setter Property="Foreground" Value="{StaticResource TextBrush1}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="FontSize" Value="11" />
        <Setter Property="FontFamily" Value="{StaticResource DataGridItemFont}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid>
                        <Border Margin="{TemplateBinding Margin}"
                                VerticalAlignment="Stretch"
                                HorizontalAlignment="Stretch"
                                CornerRadius="0" 
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <ContentPresenter Margin="2,2,2,0"/>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Foreground" Value="{StaticResource TextBrush1}"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="10" />
        <Setter Property="FontFamily" Value="{StaticResource DataGridHeaderFont}"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid Margin="-1,-1,0,0" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="BackgroundBorder" 
                                BorderThickness="1,1,0,1" 
                                Grid.ColumnSpan="1"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Background="{StaticResource HeaderBackgroundBrush}"
                                BorderBrush="{StaticResource LightEdgeBrush}">
                        </Border>
                        <ContentPresenter Margin="2,1,2,1" 
                                          VerticalAlignment="Center" 
                                          HorizontalAlignment="Center"/>
                        <Path Name="UpArrow" Fill="{StaticResource LightGlyphBrush}" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,3,0" Visibility="Hidden">
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure StartPoint="0,0">
                                        <LineSegment Point="6,0"/>
                                        <LineSegment Point="3,5"/>
                                        <LineSegment Point="0,0"/>
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                        <Path Name="DownArrow" Fill="{StaticResource LightGlyphBrush}" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,3,0" Visibility="Hidden">
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure StartPoint="0,5">
                                        <LineSegment Point="6,5"/>
                                        <LineSegment Point="3,0"/>
                                        <LineSegment Point="0,5"/>
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                        <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Margin="0, 0, 0, 0" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                        <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="DownArrow" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="UpArrow" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="DownArrow" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="UpArrow" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="SelectAllButtonTemplate" TargetType="{x:Type Button}">
      <Grid>
        <Rectangle x:Name="Border" SnapsToDevicePixels="True"
					     Stroke="{StaticResource LightEdgeBrush}"
					     Fill="{StaticResource HeaderBackgroundBrush}" />
        <Border SnapsToDevicePixels="True" Margin="1,0,1,0"
					  BorderBrush="{StaticResource LightEdgeBrush}" BorderThickness="0,1,0,0" />
        <Polygon x:Name="Arrow"
					   HorizontalAlignment="Right"
					   VerticalAlignment="Bottom"
					   Margin="2,2,2,2"
					   Opacity="0.5"
					   Fill="{StaticResource SuperLightEdgeBrush}"
					   Stretch="Uniform"
					   Points="0,4 4,4 4,0" />
      </Grid>
      <ControlTemplate.Triggers>
        <Trigger Property="IsMouseOver" Value="True">
          <Setter TargetName="Border" Property="Fill"
						  Value="{StaticResource HeaderBackgroundBrush}" />
        </Trigger>
        <Trigger Property="IsPressed" Value="True">
          <Setter TargetName="Border" Property="Fill"
						  Value="{StaticResource CalendarDayItemBkgBrush}" />
        </Trigger>
        <Trigger Property="IsEnabled" Value="False">
          <Setter TargetName="Arrow" Property="Visibility" Value="Collapsed" />
        </Trigger>
      </ControlTemplate.Triggers>
    </ControlTemplate>



    <Style x:Key="RowHeaderThumbStyle" TargetType="{x:Type Thumb}">
      <Setter Property="Cursor" Value="SizeNS"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Thumb}">
            <Border
						  HorizontalAlignment="Stretch"
						  Height="5"
						  Background="Transparent"
						  BorderBrush="Transparent"/>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <Style TargetType="{x:Type DataGridRowHeader}">
      <Setter Property="Width" Value="10"/>
      <Setter Property="Cursor" Value="Hand"/>
      <Setter Property="Background" Value="{StaticResource DataGridRowBkgBrush}"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
            <Border VerticalAlignment="Stretch"
							  HorizontalAlignment="Stretch"
							  Background="{StaticResource DataGridRowBkgBrush}"
							  BorderBrush="{StaticResource DarkBorderBrush}"
							  BorderThickness="1">

              <Grid VerticalAlignment="Stretch"
							    HorizontalAlignment="Stretch"
							    Background="Transparent">

                <Thumb x:Name="PART_TopHeaderGripper"
								     VerticalAlignment="Top"
								     Style="{StaticResource RowHeaderThumbStyle}"/>

                <Thumb x:Name="PART_BottomHeaderGripper"
								     VerticalAlignment="Bottom"
								     Style="{StaticResource RowHeaderThumbStyle}"/>
              </Grid>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

  <Style TargetType="{x:Type DataGrid}">
        <Setter Property="Background" Value="{StaticResource DataGridBkgBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource DataGridBorderBrush}"/>
        <Setter Property="CanUserResizeColumns" Value="True"/>
        <Setter Property="MinRowHeight" Value="20"/>
        <Setter Property="RowHeaderWidth" Value="0" />
        <Setter Property="RowBackground" Value="{StaticResource DataGridRowBkgBrush}" />
        <Setter Property="AlternatingRowBackground" Value="{StaticResource DataGridRowAltBkgBrush}" />
        <Setter Property="RowStyle">
            <Setter.Value>
                <Style TargetType="{x:Type DataGridRow}">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{StaticResource DataGridSelectedRowBackgroundBrush}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type DataGrid}">
              <Border
						    Background="{TemplateBinding Background}"
						    BorderBrush="{TemplateBinding BorderBrush}"
						    BorderThickness="{TemplateBinding BorderThickness}"
						    SnapsToDevicePixels="True"
						    Padding="{TemplateBinding Padding}">
                <ScrollViewer Focusable="false" Name="DG_ScrollViewer">
                  <ScrollViewer.Template>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                      <Grid>
                        <Grid.RowDefinitions>
                          <RowDefinition Height="Auto"/>
                          <RowDefinition Height="*"/>
                          <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="Auto"/>
                          <ColumnDefinition Width="*"/>
                          <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <!--Left Column Header Corner -->
                        <Button
											    Command="{x:Static DataGrid.SelectAllCommand}"
											    Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=CellsPanelHorizontalOffset}"
											    Focusable="false"
											    Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.All}}"
											    Template="{StaticResource SelectAllButtonTemplate}"/>
                        <!--Column Headers-->
                        <DataGridColumnHeadersPresenter
											    Grid.Column="1"
											    Name="PART_ColumnHeadersPresenter"
											    Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Column}}"/>

                        <!--DataGrid content-->
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.Row="1" Grid.ColumnSpan="2" CanContentScroll="{TemplateBinding CanContentScroll}" />

                        <ScrollBar
											    Grid.Row="0" Grid.RowSpan="2" Grid.Column="2" Name="PART_VerticalScrollBar"
											    Orientation="Vertical"
											    Maximum="{TemplateBinding ScrollableHeight}"
											    ViewportSize="{TemplateBinding ViewportHeight}"
											    Value="{Binding Path=VerticalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
											    Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>

                        <Grid Grid.Row="2" Grid.Column="1">
                          <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=NonFrozenColumnsViewportHorizontalOffset}"/>
                            <ColumnDefinition Width="*"/>
                          </Grid.ColumnDefinitions>
                          <ScrollBar
												    Grid.Column="1"
												    Name="PART_HorizontalScrollBar"
												    Orientation="Horizontal"
												    Maximum="{TemplateBinding ScrollableWidth}"
												    ViewportSize="{TemplateBinding ViewportWidth}"
												    Value="{Binding Path=HorizontalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
												    Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                        </Grid>
                      </Grid>
                    </ControlTemplate>
                  </ScrollViewer.Template>
                  <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </ScrollViewer>
              </Border>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WpfsToolkitCheckBox"  BasedOn="{StaticResource WpfsCheckBox}" TargetType="{x:Type CheckBox}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>

</ResourceDictionary>
