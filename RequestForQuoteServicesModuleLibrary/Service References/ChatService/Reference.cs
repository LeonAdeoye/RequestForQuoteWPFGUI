//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1008
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RequestForQuoteServicesModuleLibrary.ChatService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://chat.rfq.ws.leon.com/", ConfigurationName="ChatService.ChatMediator")]
    public interface ChatMediator {
        
        // CODEGEN: Parameter 'requestForQuoteId' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        RequestForQuoteServicesModuleLibrary.ChatService.sendMessageResponse sendMessage(RequestForQuoteServicesModuleLibrary.ChatService.sendMessage request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="", ReplyAction="*")]
        System.IAsyncResult BeginsendMessage(RequestForQuoteServicesModuleLibrary.ChatService.sendMessage request, System.AsyncCallback callback, object asyncState);
        
        RequestForQuoteServicesModuleLibrary.ChatService.sendMessageResponse EndsendMessage(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'return' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        RequestForQuoteServicesModuleLibrary.ChatService.registerParticipantResponse registerParticipant(RequestForQuoteServicesModuleLibrary.ChatService.registerParticipant request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="", ReplyAction="*")]
        System.IAsyncResult BeginregisterParticipant(RequestForQuoteServicesModuleLibrary.ChatService.registerParticipant request, System.AsyncCallback callback, object asyncState);
        
        RequestForQuoteServicesModuleLibrary.ChatService.registerParticipantResponse EndregisterParticipant(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'requestForQuoteId' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        RequestForQuoteServicesModuleLibrary.ChatService.unregisterParticipantResponse unregisterParticipant(RequestForQuoteServicesModuleLibrary.ChatService.unregisterParticipant request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="", ReplyAction="*")]
        System.IAsyncResult BeginunregisterParticipant(RequestForQuoteServicesModuleLibrary.ChatService.unregisterParticipant request, System.AsyncCallback callback, object asyncState);
        
        RequestForQuoteServicesModuleLibrary.ChatService.unregisterParticipantResponse EndunregisterParticipant(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'return' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        RequestForQuoteServicesModuleLibrary.ChatService.getChatMessagesResponse getChatMessages(RequestForQuoteServicesModuleLibrary.ChatService.getChatMessages request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="", ReplyAction="*")]
        System.IAsyncResult BegingetChatMessages(RequestForQuoteServicesModuleLibrary.ChatService.getChatMessages request, System.AsyncCallback callback, object asyncState);
        
        RequestForQuoteServicesModuleLibrary.ChatService.getChatMessagesResponse EndgetChatMessages(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'return' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        RequestForQuoteServicesModuleLibrary.ChatService.isParticipantRegisteredResponse isParticipantRegistered(RequestForQuoteServicesModuleLibrary.ChatService.isParticipantRegistered request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="", ReplyAction="*")]
        System.IAsyncResult BeginisParticipantRegistered(RequestForQuoteServicesModuleLibrary.ChatService.isParticipantRegistered request, System.AsyncCallback callback, object asyncState);
        
        RequestForQuoteServicesModuleLibrary.ChatService.isParticipantRegisteredResponse EndisParticipantRegistered(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="sendMessage", WrapperNamespace="http://chat.rfq.ws.leon.com/", IsWrapped=true)]
    public partial class sendMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://chat.rfq.ws.leon.com/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int requestForQuoteId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://chat.rfq.ws.leon.com/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string sender;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://chat.rfq.ws.leon.com/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string message;
        
        public sendMessage() {
        }
        
        public sendMessage(int requestForQuoteId, string sender, string message) {
            this.requestForQuoteId = requestForQuoteId;
            this.sender = sender;
            this.message = message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="sendMessageResponse", WrapperNamespace="http://chat.rfq.ws.leon.com/", IsWrapped=true)]
    public partial class sendMessageResponse {
        
        public sendMessageResponse() {
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://chat.rfq.ws.leon.com/")]
    public partial class chatMessageListImpl : object, System.ComponentModel.INotifyPropertyChanged {
        
        private chatMessageImpl[] chatMessageListImplField;
        
        private chatMessageImpl[] chatMessageListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ChatMessageImpl", IsNullable=false)]
        public chatMessageImpl[] ChatMessageListImpl {
            get {
                return this.chatMessageListImplField;
            }
            set {
                this.chatMessageListImplField = value;
                this.RaisePropertyChanged("ChatMessageListImpl");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("chatMessageList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true, Order=1)]
        public chatMessageImpl[] chatMessageList {
            get {
                return this.chatMessageListField;
            }
            set {
                this.chatMessageListField = value;
                this.RaisePropertyChanged("chatMessageList");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://chat.rfq.ws.leon.com/")]
    public partial class chatMessageImpl : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string contentField;
        
        private string ownerField;
        
        private int requestForQuoteIdField;
        
        private int sequenceIdField;
        
        private string timeStampField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string content {
            get {
                return this.contentField;
            }
            set {
                this.contentField = value;
                this.RaisePropertyChanged("content");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
                this.RaisePropertyChanged("owner");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public int requestForQuoteId {
            get {
                return this.requestForQuoteIdField;
            }
            set {
                this.requestForQuoteIdField = value;
                this.RaisePropertyChanged("requestForQuoteId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public int sequenceId {
            get {
                return this.sequenceIdField;
            }
            set {
                this.sequenceIdField = value;
                this.RaisePropertyChanged("sequenceId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4)]
        public string timeStamp {
            get {
                return this.timeStampField;
            }
            set {
                this.timeStampField = value;
                this.RaisePropertyChanged("timeStamp");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="registerParticipant", WrapperNamespace="http://chat.rfq.ws.leon.com/", IsWrapped=true)]
    public partial class registerParticipant {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://chat.rfq.ws.leon.com/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int requestForQuoteId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://chat.rfq.ws.leon.com/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newParticipantName;
        
        public registerParticipant() {
        }
        
        public registerParticipant(int requestForQuoteId, string newParticipantName) {
            this.requestForQuoteId = requestForQuoteId;
            this.newParticipantName = newParticipantName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="registerParticipantResponse", WrapperNamespace="http://chat.rfq.ws.leon.com/", IsWrapped=true)]
    public partial class registerParticipantResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://chat.rfq.ws.leon.com/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RequestForQuoteServicesModuleLibrary.ChatService.chatMessageListImpl @return;
        
        public registerParticipantResponse() {
        }
        
        public registerParticipantResponse(RequestForQuoteServicesModuleLibrary.ChatService.chatMessageListImpl @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="unregisterParticipant", WrapperNamespace="http://chat.rfq.ws.leon.com/", IsWrapped=true)]
    public partial class unregisterParticipant {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://chat.rfq.ws.leon.com/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int requestForQuoteId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://chat.rfq.ws.leon.com/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string existingParticipantName;
        
        public unregisterParticipant() {
        }
        
        public unregisterParticipant(int requestForQuoteId, string existingParticipantName) {
            this.requestForQuoteId = requestForQuoteId;
            this.existingParticipantName = existingParticipantName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="unregisterParticipantResponse", WrapperNamespace="http://chat.rfq.ws.leon.com/", IsWrapped=true)]
    public partial class unregisterParticipantResponse {
        
        public unregisterParticipantResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getChatMessages", WrapperNamespace="http://chat.rfq.ws.leon.com/", IsWrapped=true)]
    public partial class getChatMessages {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://chat.rfq.ws.leon.com/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int requestForQuoteId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://chat.rfq.ws.leon.com/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int fromThisSequenceId;
        
        public getChatMessages() {
        }
        
        public getChatMessages(int requestForQuoteId, int fromThisSequenceId) {
            this.requestForQuoteId = requestForQuoteId;
            this.fromThisSequenceId = fromThisSequenceId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getChatMessagesResponse", WrapperNamespace="http://chat.rfq.ws.leon.com/", IsWrapped=true)]
    public partial class getChatMessagesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://chat.rfq.ws.leon.com/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RequestForQuoteServicesModuleLibrary.ChatService.chatMessageListImpl @return;
        
        public getChatMessagesResponse() {
        }
        
        public getChatMessagesResponse(RequestForQuoteServicesModuleLibrary.ChatService.chatMessageListImpl @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="isParticipantRegistered", WrapperNamespace="http://chat.rfq.ws.leon.com/", IsWrapped=true)]
    public partial class isParticipantRegistered {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://chat.rfq.ws.leon.com/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int requestForQuoteId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://chat.rfq.ws.leon.com/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string participantName;
        
        public isParticipantRegistered() {
        }
        
        public isParticipantRegistered(int requestForQuoteId, string participantName) {
            this.requestForQuoteId = requestForQuoteId;
            this.participantName = participantName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="isParticipantRegisteredResponse", WrapperNamespace="http://chat.rfq.ws.leon.com/", IsWrapped=true)]
    public partial class isParticipantRegisteredResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://chat.rfq.ws.leon.com/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool @return;
        
        public isParticipantRegisteredResponse() {
        }
        
        public isParticipantRegisteredResponse(bool @return) {
            this.@return = @return;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ChatMediatorChannel : RequestForQuoteServicesModuleLibrary.ChatService.ChatMediator, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class registerParticipantCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public registerParticipantCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public RequestForQuoteServicesModuleLibrary.ChatService.chatMessageListImpl Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((RequestForQuoteServicesModuleLibrary.ChatService.chatMessageListImpl)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getChatMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getChatMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public RequestForQuoteServicesModuleLibrary.ChatService.chatMessageListImpl Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((RequestForQuoteServicesModuleLibrary.ChatService.chatMessageListImpl)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class isParticipantRegisteredCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public isParticipantRegisteredCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChatMediatorClient : System.ServiceModel.ClientBase<RequestForQuoteServicesModuleLibrary.ChatService.ChatMediator>, RequestForQuoteServicesModuleLibrary.ChatService.ChatMediator {
        
        private BeginOperationDelegate onBeginsendMessageDelegate;
        
        private EndOperationDelegate onEndsendMessageDelegate;
        
        private System.Threading.SendOrPostCallback onsendMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginregisterParticipantDelegate;
        
        private EndOperationDelegate onEndregisterParticipantDelegate;
        
        private System.Threading.SendOrPostCallback onregisterParticipantCompletedDelegate;
        
        private BeginOperationDelegate onBeginunregisterParticipantDelegate;
        
        private EndOperationDelegate onEndunregisterParticipantDelegate;
        
        private System.Threading.SendOrPostCallback onunregisterParticipantCompletedDelegate;
        
        private BeginOperationDelegate onBegingetChatMessagesDelegate;
        
        private EndOperationDelegate onEndgetChatMessagesDelegate;
        
        private System.Threading.SendOrPostCallback ongetChatMessagesCompletedDelegate;
        
        private BeginOperationDelegate onBeginisParticipantRegisteredDelegate;
        
        private EndOperationDelegate onEndisParticipantRegisteredDelegate;
        
        private System.Threading.SendOrPostCallback onisParticipantRegisteredCompletedDelegate;
        
        public ChatMediatorClient() {
        }
        
        public ChatMediatorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ChatMediatorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ChatMediatorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ChatMediatorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> sendMessageCompleted;
        
        public event System.EventHandler<registerParticipantCompletedEventArgs> registerParticipantCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> unregisterParticipantCompleted;
        
        public event System.EventHandler<getChatMessagesCompletedEventArgs> getChatMessagesCompleted;
        
        public event System.EventHandler<isParticipantRegisteredCompletedEventArgs> isParticipantRegisteredCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RequestForQuoteServicesModuleLibrary.ChatService.sendMessageResponse RequestForQuoteServicesModuleLibrary.ChatService.ChatMediator.sendMessage(RequestForQuoteServicesModuleLibrary.ChatService.sendMessage request) {
            return base.Channel.sendMessage(request);
        }
        
        public void sendMessage(int requestForQuoteId, string sender, string message) {
            RequestForQuoteServicesModuleLibrary.ChatService.sendMessage inValue = new RequestForQuoteServicesModuleLibrary.ChatService.sendMessage();
            inValue.requestForQuoteId = requestForQuoteId;
            inValue.sender = sender;
            inValue.message = message;
            RequestForQuoteServicesModuleLibrary.ChatService.sendMessageResponse retVal = ((RequestForQuoteServicesModuleLibrary.ChatService.ChatMediator)(this)).sendMessage(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult RequestForQuoteServicesModuleLibrary.ChatService.ChatMediator.BeginsendMessage(RequestForQuoteServicesModuleLibrary.ChatService.sendMessage request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginsendMessage(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginsendMessage(int requestForQuoteId, string sender, string message, System.AsyncCallback callback, object asyncState) {
            RequestForQuoteServicesModuleLibrary.ChatService.sendMessage inValue = new RequestForQuoteServicesModuleLibrary.ChatService.sendMessage();
            inValue.requestForQuoteId = requestForQuoteId;
            inValue.sender = sender;
            inValue.message = message;
            return ((RequestForQuoteServicesModuleLibrary.ChatService.ChatMediator)(this)).BeginsendMessage(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RequestForQuoteServicesModuleLibrary.ChatService.sendMessageResponse RequestForQuoteServicesModuleLibrary.ChatService.ChatMediator.EndsendMessage(System.IAsyncResult result) {
            return base.Channel.EndsendMessage(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndsendMessage(System.IAsyncResult result) {
            RequestForQuoteServicesModuleLibrary.ChatService.sendMessageResponse retVal = ((RequestForQuoteServicesModuleLibrary.ChatService.ChatMediator)(this)).EndsendMessage(result);
        }
        
        private System.IAsyncResult OnBeginsendMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int requestForQuoteId = ((int)(inValues[0]));
            string sender = ((string)(inValues[1]));
            string message = ((string)(inValues[2]));
            return this.BeginsendMessage(requestForQuoteId, sender, message, callback, asyncState);
        }
        
        private object[] OnEndsendMessage(System.IAsyncResult result) {
            this.EndsendMessage(result);
            return null;
        }
        
        private void OnsendMessageCompleted(object state) {
            if ((this.sendMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.sendMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void sendMessageAsync(int requestForQuoteId, string sender, string message) {
            this.sendMessageAsync(requestForQuoteId, sender, message, null);
        }
        
        public void sendMessageAsync(int requestForQuoteId, string sender, string message, object userState) {
            if ((this.onBeginsendMessageDelegate == null)) {
                this.onBeginsendMessageDelegate = new BeginOperationDelegate(this.OnBeginsendMessage);
            }
            if ((this.onEndsendMessageDelegate == null)) {
                this.onEndsendMessageDelegate = new EndOperationDelegate(this.OnEndsendMessage);
            }
            if ((this.onsendMessageCompletedDelegate == null)) {
                this.onsendMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnsendMessageCompleted);
            }
            base.InvokeAsync(this.onBeginsendMessageDelegate, new object[] {
                        requestForQuoteId,
                        sender,
                        message}, this.onEndsendMessageDelegate, this.onsendMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RequestForQuoteServicesModuleLibrary.ChatService.registerParticipantResponse RequestForQuoteServicesModuleLibrary.ChatService.ChatMediator.registerParticipant(RequestForQuoteServicesModuleLibrary.ChatService.registerParticipant request) {
            return base.Channel.registerParticipant(request);
        }
        
        public RequestForQuoteServicesModuleLibrary.ChatService.chatMessageListImpl registerParticipant(int requestForQuoteId, string newParticipantName) {
            RequestForQuoteServicesModuleLibrary.ChatService.registerParticipant inValue = new RequestForQuoteServicesModuleLibrary.ChatService.registerParticipant();
            inValue.requestForQuoteId = requestForQuoteId;
            inValue.newParticipantName = newParticipantName;
            RequestForQuoteServicesModuleLibrary.ChatService.registerParticipantResponse retVal = ((RequestForQuoteServicesModuleLibrary.ChatService.ChatMediator)(this)).registerParticipant(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult RequestForQuoteServicesModuleLibrary.ChatService.ChatMediator.BeginregisterParticipant(RequestForQuoteServicesModuleLibrary.ChatService.registerParticipant request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginregisterParticipant(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginregisterParticipant(int requestForQuoteId, string newParticipantName, System.AsyncCallback callback, object asyncState) {
            RequestForQuoteServicesModuleLibrary.ChatService.registerParticipant inValue = new RequestForQuoteServicesModuleLibrary.ChatService.registerParticipant();
            inValue.requestForQuoteId = requestForQuoteId;
            inValue.newParticipantName = newParticipantName;
            return ((RequestForQuoteServicesModuleLibrary.ChatService.ChatMediator)(this)).BeginregisterParticipant(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RequestForQuoteServicesModuleLibrary.ChatService.registerParticipantResponse RequestForQuoteServicesModuleLibrary.ChatService.ChatMediator.EndregisterParticipant(System.IAsyncResult result) {
            return base.Channel.EndregisterParticipant(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public RequestForQuoteServicesModuleLibrary.ChatService.chatMessageListImpl EndregisterParticipant(System.IAsyncResult result) {
            RequestForQuoteServicesModuleLibrary.ChatService.registerParticipantResponse retVal = ((RequestForQuoteServicesModuleLibrary.ChatService.ChatMediator)(this)).EndregisterParticipant(result);
            return retVal.@return;
        }
        
        private System.IAsyncResult OnBeginregisterParticipant(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int requestForQuoteId = ((int)(inValues[0]));
            string newParticipantName = ((string)(inValues[1]));
            return this.BeginregisterParticipant(requestForQuoteId, newParticipantName, callback, asyncState);
        }
        
        private object[] OnEndregisterParticipant(System.IAsyncResult result) {
            RequestForQuoteServicesModuleLibrary.ChatService.chatMessageListImpl retVal = this.EndregisterParticipant(result);
            return new object[] {
                    retVal};
        }
        
        private void OnregisterParticipantCompleted(object state) {
            if ((this.registerParticipantCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.registerParticipantCompleted(this, new registerParticipantCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void registerParticipantAsync(int requestForQuoteId, string newParticipantName) {
            this.registerParticipantAsync(requestForQuoteId, newParticipantName, null);
        }
        
        public void registerParticipantAsync(int requestForQuoteId, string newParticipantName, object userState) {
            if ((this.onBeginregisterParticipantDelegate == null)) {
                this.onBeginregisterParticipantDelegate = new BeginOperationDelegate(this.OnBeginregisterParticipant);
            }
            if ((this.onEndregisterParticipantDelegate == null)) {
                this.onEndregisterParticipantDelegate = new EndOperationDelegate(this.OnEndregisterParticipant);
            }
            if ((this.onregisterParticipantCompletedDelegate == null)) {
                this.onregisterParticipantCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnregisterParticipantCompleted);
            }
            base.InvokeAsync(this.onBeginregisterParticipantDelegate, new object[] {
                        requestForQuoteId,
                        newParticipantName}, this.onEndregisterParticipantDelegate, this.onregisterParticipantCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RequestForQuoteServicesModuleLibrary.ChatService.unregisterParticipantResponse RequestForQuoteServicesModuleLibrary.ChatService.ChatMediator.unregisterParticipant(RequestForQuoteServicesModuleLibrary.ChatService.unregisterParticipant request) {
            return base.Channel.unregisterParticipant(request);
        }
        
        public void unregisterParticipant(int requestForQuoteId, string existingParticipantName) {
            RequestForQuoteServicesModuleLibrary.ChatService.unregisterParticipant inValue = new RequestForQuoteServicesModuleLibrary.ChatService.unregisterParticipant();
            inValue.requestForQuoteId = requestForQuoteId;
            inValue.existingParticipantName = existingParticipantName;
            RequestForQuoteServicesModuleLibrary.ChatService.unregisterParticipantResponse retVal = ((RequestForQuoteServicesModuleLibrary.ChatService.ChatMediator)(this)).unregisterParticipant(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult RequestForQuoteServicesModuleLibrary.ChatService.ChatMediator.BeginunregisterParticipant(RequestForQuoteServicesModuleLibrary.ChatService.unregisterParticipant request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginunregisterParticipant(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginunregisterParticipant(int requestForQuoteId, string existingParticipantName, System.AsyncCallback callback, object asyncState) {
            RequestForQuoteServicesModuleLibrary.ChatService.unregisterParticipant inValue = new RequestForQuoteServicesModuleLibrary.ChatService.unregisterParticipant();
            inValue.requestForQuoteId = requestForQuoteId;
            inValue.existingParticipantName = existingParticipantName;
            return ((RequestForQuoteServicesModuleLibrary.ChatService.ChatMediator)(this)).BeginunregisterParticipant(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RequestForQuoteServicesModuleLibrary.ChatService.unregisterParticipantResponse RequestForQuoteServicesModuleLibrary.ChatService.ChatMediator.EndunregisterParticipant(System.IAsyncResult result) {
            return base.Channel.EndunregisterParticipant(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndunregisterParticipant(System.IAsyncResult result) {
            RequestForQuoteServicesModuleLibrary.ChatService.unregisterParticipantResponse retVal = ((RequestForQuoteServicesModuleLibrary.ChatService.ChatMediator)(this)).EndunregisterParticipant(result);
        }
        
        private System.IAsyncResult OnBeginunregisterParticipant(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int requestForQuoteId = ((int)(inValues[0]));
            string existingParticipantName = ((string)(inValues[1]));
            return this.BeginunregisterParticipant(requestForQuoteId, existingParticipantName, callback, asyncState);
        }
        
        private object[] OnEndunregisterParticipant(System.IAsyncResult result) {
            this.EndunregisterParticipant(result);
            return null;
        }
        
        private void OnunregisterParticipantCompleted(object state) {
            if ((this.unregisterParticipantCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.unregisterParticipantCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void unregisterParticipantAsync(int requestForQuoteId, string existingParticipantName) {
            this.unregisterParticipantAsync(requestForQuoteId, existingParticipantName, null);
        }
        
        public void unregisterParticipantAsync(int requestForQuoteId, string existingParticipantName, object userState) {
            if ((this.onBeginunregisterParticipantDelegate == null)) {
                this.onBeginunregisterParticipantDelegate = new BeginOperationDelegate(this.OnBeginunregisterParticipant);
            }
            if ((this.onEndunregisterParticipantDelegate == null)) {
                this.onEndunregisterParticipantDelegate = new EndOperationDelegate(this.OnEndunregisterParticipant);
            }
            if ((this.onunregisterParticipantCompletedDelegate == null)) {
                this.onunregisterParticipantCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnunregisterParticipantCompleted);
            }
            base.InvokeAsync(this.onBeginunregisterParticipantDelegate, new object[] {
                        requestForQuoteId,
                        existingParticipantName}, this.onEndunregisterParticipantDelegate, this.onunregisterParticipantCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RequestForQuoteServicesModuleLibrary.ChatService.getChatMessagesResponse RequestForQuoteServicesModuleLibrary.ChatService.ChatMediator.getChatMessages(RequestForQuoteServicesModuleLibrary.ChatService.getChatMessages request) {
            return base.Channel.getChatMessages(request);
        }
        
        public RequestForQuoteServicesModuleLibrary.ChatService.chatMessageListImpl getChatMessages(int requestForQuoteId, int fromThisSequenceId) {
            RequestForQuoteServicesModuleLibrary.ChatService.getChatMessages inValue = new RequestForQuoteServicesModuleLibrary.ChatService.getChatMessages();
            inValue.requestForQuoteId = requestForQuoteId;
            inValue.fromThisSequenceId = fromThisSequenceId;
            RequestForQuoteServicesModuleLibrary.ChatService.getChatMessagesResponse retVal = ((RequestForQuoteServicesModuleLibrary.ChatService.ChatMediator)(this)).getChatMessages(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult RequestForQuoteServicesModuleLibrary.ChatService.ChatMediator.BegingetChatMessages(RequestForQuoteServicesModuleLibrary.ChatService.getChatMessages request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetChatMessages(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetChatMessages(int requestForQuoteId, int fromThisSequenceId, System.AsyncCallback callback, object asyncState) {
            RequestForQuoteServicesModuleLibrary.ChatService.getChatMessages inValue = new RequestForQuoteServicesModuleLibrary.ChatService.getChatMessages();
            inValue.requestForQuoteId = requestForQuoteId;
            inValue.fromThisSequenceId = fromThisSequenceId;
            return ((RequestForQuoteServicesModuleLibrary.ChatService.ChatMediator)(this)).BegingetChatMessages(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RequestForQuoteServicesModuleLibrary.ChatService.getChatMessagesResponse RequestForQuoteServicesModuleLibrary.ChatService.ChatMediator.EndgetChatMessages(System.IAsyncResult result) {
            return base.Channel.EndgetChatMessages(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public RequestForQuoteServicesModuleLibrary.ChatService.chatMessageListImpl EndgetChatMessages(System.IAsyncResult result) {
            RequestForQuoteServicesModuleLibrary.ChatService.getChatMessagesResponse retVal = ((RequestForQuoteServicesModuleLibrary.ChatService.ChatMediator)(this)).EndgetChatMessages(result);
            return retVal.@return;
        }
        
        private System.IAsyncResult OnBegingetChatMessages(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int requestForQuoteId = ((int)(inValues[0]));
            int fromThisSequenceId = ((int)(inValues[1]));
            return this.BegingetChatMessages(requestForQuoteId, fromThisSequenceId, callback, asyncState);
        }
        
        private object[] OnEndgetChatMessages(System.IAsyncResult result) {
            RequestForQuoteServicesModuleLibrary.ChatService.chatMessageListImpl retVal = this.EndgetChatMessages(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetChatMessagesCompleted(object state) {
            if ((this.getChatMessagesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getChatMessagesCompleted(this, new getChatMessagesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getChatMessagesAsync(int requestForQuoteId, int fromThisSequenceId) {
            this.getChatMessagesAsync(requestForQuoteId, fromThisSequenceId, null);
        }
        
        public void getChatMessagesAsync(int requestForQuoteId, int fromThisSequenceId, object userState) {
            if ((this.onBegingetChatMessagesDelegate == null)) {
                this.onBegingetChatMessagesDelegate = new BeginOperationDelegate(this.OnBegingetChatMessages);
            }
            if ((this.onEndgetChatMessagesDelegate == null)) {
                this.onEndgetChatMessagesDelegate = new EndOperationDelegate(this.OnEndgetChatMessages);
            }
            if ((this.ongetChatMessagesCompletedDelegate == null)) {
                this.ongetChatMessagesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetChatMessagesCompleted);
            }
            base.InvokeAsync(this.onBegingetChatMessagesDelegate, new object[] {
                        requestForQuoteId,
                        fromThisSequenceId}, this.onEndgetChatMessagesDelegate, this.ongetChatMessagesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RequestForQuoteServicesModuleLibrary.ChatService.isParticipantRegisteredResponse RequestForQuoteServicesModuleLibrary.ChatService.ChatMediator.isParticipantRegistered(RequestForQuoteServicesModuleLibrary.ChatService.isParticipantRegistered request) {
            return base.Channel.isParticipantRegistered(request);
        }
        
        public bool isParticipantRegistered(int requestForQuoteId, string participantName) {
            RequestForQuoteServicesModuleLibrary.ChatService.isParticipantRegistered inValue = new RequestForQuoteServicesModuleLibrary.ChatService.isParticipantRegistered();
            inValue.requestForQuoteId = requestForQuoteId;
            inValue.participantName = participantName;
            RequestForQuoteServicesModuleLibrary.ChatService.isParticipantRegisteredResponse retVal = ((RequestForQuoteServicesModuleLibrary.ChatService.ChatMediator)(this)).isParticipantRegistered(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult RequestForQuoteServicesModuleLibrary.ChatService.ChatMediator.BeginisParticipantRegistered(RequestForQuoteServicesModuleLibrary.ChatService.isParticipantRegistered request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginisParticipantRegistered(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginisParticipantRegistered(int requestForQuoteId, string participantName, System.AsyncCallback callback, object asyncState) {
            RequestForQuoteServicesModuleLibrary.ChatService.isParticipantRegistered inValue = new RequestForQuoteServicesModuleLibrary.ChatService.isParticipantRegistered();
            inValue.requestForQuoteId = requestForQuoteId;
            inValue.participantName = participantName;
            return ((RequestForQuoteServicesModuleLibrary.ChatService.ChatMediator)(this)).BeginisParticipantRegistered(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RequestForQuoteServicesModuleLibrary.ChatService.isParticipantRegisteredResponse RequestForQuoteServicesModuleLibrary.ChatService.ChatMediator.EndisParticipantRegistered(System.IAsyncResult result) {
            return base.Channel.EndisParticipantRegistered(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndisParticipantRegistered(System.IAsyncResult result) {
            RequestForQuoteServicesModuleLibrary.ChatService.isParticipantRegisteredResponse retVal = ((RequestForQuoteServicesModuleLibrary.ChatService.ChatMediator)(this)).EndisParticipantRegistered(result);
            return retVal.@return;
        }
        
        private System.IAsyncResult OnBeginisParticipantRegistered(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int requestForQuoteId = ((int)(inValues[0]));
            string participantName = ((string)(inValues[1]));
            return this.BeginisParticipantRegistered(requestForQuoteId, participantName, callback, asyncState);
        }
        
        private object[] OnEndisParticipantRegistered(System.IAsyncResult result) {
            bool retVal = this.EndisParticipantRegistered(result);
            return new object[] {
                    retVal};
        }
        
        private void OnisParticipantRegisteredCompleted(object state) {
            if ((this.isParticipantRegisteredCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.isParticipantRegisteredCompleted(this, new isParticipantRegisteredCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void isParticipantRegisteredAsync(int requestForQuoteId, string participantName) {
            this.isParticipantRegisteredAsync(requestForQuoteId, participantName, null);
        }
        
        public void isParticipantRegisteredAsync(int requestForQuoteId, string participantName, object userState) {
            if ((this.onBeginisParticipantRegisteredDelegate == null)) {
                this.onBeginisParticipantRegisteredDelegate = new BeginOperationDelegate(this.OnBeginisParticipantRegistered);
            }
            if ((this.onEndisParticipantRegisteredDelegate == null)) {
                this.onEndisParticipantRegisteredDelegate = new EndOperationDelegate(this.OnEndisParticipantRegistered);
            }
            if ((this.onisParticipantRegisteredCompletedDelegate == null)) {
                this.onisParticipantRegisteredCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnisParticipantRegisteredCompleted);
            }
            base.InvokeAsync(this.onBeginisParticipantRegisteredDelegate, new object[] {
                        requestForQuoteId,
                        participantName}, this.onEndisParticipantRegisteredDelegate, this.onisParticipantRegisteredCompletedDelegate, userState);
        }
    }
}
