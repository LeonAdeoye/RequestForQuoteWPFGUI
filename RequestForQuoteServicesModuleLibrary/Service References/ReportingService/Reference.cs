//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1008
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RequestForQuoteServicesModuleLibrary.ReportingService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://reporting.rfq.ws.leon.com/", ConfigurationName="ReportingService.ReportingController")]
    public interface ReportingController {
        
        // CODEGEN: Parameter 'return' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        RequestForQuoteServicesModuleLibrary.ReportingService.getRequestsByCategoryResponse getRequestsByCategory(RequestForQuoteServicesModuleLibrary.ReportingService.getRequestsByCategory request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="", ReplyAction="*")]
        System.IAsyncResult BegingetRequestsByCategory(RequestForQuoteServicesModuleLibrary.ReportingService.getRequestsByCategory request, System.AsyncCallback callback, object asyncState);
        
        RequestForQuoteServicesModuleLibrary.ReportingService.getRequestsByCategoryResponse EndgetRequestsByCategory(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'return' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        RequestForQuoteServicesModuleLibrary.ReportingService.getGreeksByCategoryResponse getGreeksByCategory(RequestForQuoteServicesModuleLibrary.ReportingService.getGreeksByCategory request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="", ReplyAction="*")]
        System.IAsyncResult BegingetGreeksByCategory(RequestForQuoteServicesModuleLibrary.ReportingService.getGreeksByCategory request, System.AsyncCallback callback, object asyncState);
        
        RequestForQuoteServicesModuleLibrary.ReportingService.getGreeksByCategoryResponse EndgetGreeksByCategory(System.IAsyncResult result);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1015")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://reporting.rfq.ws.leon.com/")]
    public partial class requestCountReportDataImpl : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string categoryValueField;
        
        private int requestCountField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string categoryValue {
            get {
                return this.categoryValueField;
            }
            set {
                this.categoryValueField = value;
                this.RaisePropertyChanged("categoryValue");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public int requestCount {
            get {
                return this.requestCountField;
            }
            set {
                this.requestCountField = value;
                this.RaisePropertyChanged("requestCount");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1015")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://reporting.rfq.ws.leon.com/")]
    public partial class greeksPerCategoryReportDataImpl : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string categoryValueField;
        
        private double greekTotalField;
        
        private string greekTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string categoryValue {
            get {
                return this.categoryValueField;
            }
            set {
                this.categoryValueField = value;
                this.RaisePropertyChanged("categoryValue");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public double greekTotal {
            get {
                return this.greekTotalField;
            }
            set {
                this.greekTotalField = value;
                this.RaisePropertyChanged("greekTotal");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public string greekType {
            get {
                return this.greekTypeField;
            }
            set {
                this.greekTypeField = value;
                this.RaisePropertyChanged("greekType");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getRequestsByCategory", WrapperNamespace="http://reporting.rfq.ws.leon.com/", IsWrapped=true)]
    public partial class getRequestsByCategory {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://reporting.rfq.ws.leon.com/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string categoryType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://reporting.rfq.ws.leon.com/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime fromDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://reporting.rfq.ws.leon.com/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int minimumCount;
        
        public getRequestsByCategory() {
        }
        
        public getRequestsByCategory(string categoryType, System.DateTime fromDate, int minimumCount) {
            this.categoryType = categoryType;
            this.fromDate = fromDate;
            this.minimumCount = minimumCount;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getRequestsByCategoryResponse", WrapperNamespace="http://reporting.rfq.ws.leon.com/", IsWrapped=true)]
    public partial class getRequestsByCategoryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://reporting.rfq.ws.leon.com/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public requestCountReportDataImpl[] @return;
        
        public getRequestsByCategoryResponse() {
        }
        
        public getRequestsByCategoryResponse(requestCountReportDataImpl[] @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getGreeksByCategory", WrapperNamespace="http://reporting.rfq.ws.leon.com/", IsWrapped=true)]
    public partial class getGreeksByCategory {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://reporting.rfq.ws.leon.com/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string categoryType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://reporting.rfq.ws.leon.com/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute("greeksToBeIncluded", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] greeksToBeIncluded;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://reporting.rfq.ws.leon.com/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime MaturityDatefrom;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://reporting.rfq.ws.leon.com/", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime MaturityDateTo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://reporting.rfq.ws.leon.com/", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double minimumGreek;
        
        public getGreeksByCategory() {
        }
        
        public getGreeksByCategory(string categoryType, string[] greeksToBeIncluded, System.DateTime MaturityDatefrom, System.DateTime MaturityDateTo, double minimumGreek) {
            this.categoryType = categoryType;
            this.greeksToBeIncluded = greeksToBeIncluded;
            this.MaturityDatefrom = MaturityDatefrom;
            this.MaturityDateTo = MaturityDateTo;
            this.minimumGreek = minimumGreek;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getGreeksByCategoryResponse", WrapperNamespace="http://reporting.rfq.ws.leon.com/", IsWrapped=true)]
    public partial class getGreeksByCategoryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://reporting.rfq.ws.leon.com/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public greeksPerCategoryReportDataImpl[] @return;
        
        public getGreeksByCategoryResponse() {
        }
        
        public getGreeksByCategoryResponse(greeksPerCategoryReportDataImpl[] @return) {
            this.@return = @return;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ReportingControllerChannel : RequestForQuoteServicesModuleLibrary.ReportingService.ReportingController, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getRequestsByCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getRequestsByCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public requestCountReportDataImpl[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((requestCountReportDataImpl[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getGreeksByCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getGreeksByCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public greeksPerCategoryReportDataImpl[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((greeksPerCategoryReportDataImpl[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReportingControllerClient : System.ServiceModel.ClientBase<RequestForQuoteServicesModuleLibrary.ReportingService.ReportingController>, RequestForQuoteServicesModuleLibrary.ReportingService.ReportingController {
        
        private BeginOperationDelegate onBegingetRequestsByCategoryDelegate;
        
        private EndOperationDelegate onEndgetRequestsByCategoryDelegate;
        
        private System.Threading.SendOrPostCallback ongetRequestsByCategoryCompletedDelegate;
        
        private BeginOperationDelegate onBegingetGreeksByCategoryDelegate;
        
        private EndOperationDelegate onEndgetGreeksByCategoryDelegate;
        
        private System.Threading.SendOrPostCallback ongetGreeksByCategoryCompletedDelegate;
        
        public ReportingControllerClient() {
        }
        
        public ReportingControllerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ReportingControllerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReportingControllerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReportingControllerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<getRequestsByCategoryCompletedEventArgs> getRequestsByCategoryCompleted;
        
        public event System.EventHandler<getGreeksByCategoryCompletedEventArgs> getGreeksByCategoryCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RequestForQuoteServicesModuleLibrary.ReportingService.getRequestsByCategoryResponse RequestForQuoteServicesModuleLibrary.ReportingService.ReportingController.getRequestsByCategory(RequestForQuoteServicesModuleLibrary.ReportingService.getRequestsByCategory request) {
            return base.Channel.getRequestsByCategory(request);
        }
        
        public requestCountReportDataImpl[] getRequestsByCategory(string categoryType, System.DateTime fromDate, int minimumCount) {
            RequestForQuoteServicesModuleLibrary.ReportingService.getRequestsByCategory inValue = new RequestForQuoteServicesModuleLibrary.ReportingService.getRequestsByCategory();
            inValue.categoryType = categoryType;
            inValue.fromDate = fromDate;
            inValue.minimumCount = minimumCount;
            RequestForQuoteServicesModuleLibrary.ReportingService.getRequestsByCategoryResponse retVal = ((RequestForQuoteServicesModuleLibrary.ReportingService.ReportingController)(this)).getRequestsByCategory(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult RequestForQuoteServicesModuleLibrary.ReportingService.ReportingController.BegingetRequestsByCategory(RequestForQuoteServicesModuleLibrary.ReportingService.getRequestsByCategory request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetRequestsByCategory(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetRequestsByCategory(string categoryType, System.DateTime fromDate, int minimumCount, System.AsyncCallback callback, object asyncState) {
            RequestForQuoteServicesModuleLibrary.ReportingService.getRequestsByCategory inValue = new RequestForQuoteServicesModuleLibrary.ReportingService.getRequestsByCategory();
            inValue.categoryType = categoryType;
            inValue.fromDate = fromDate;
            inValue.minimumCount = minimumCount;
            return ((RequestForQuoteServicesModuleLibrary.ReportingService.ReportingController)(this)).BegingetRequestsByCategory(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RequestForQuoteServicesModuleLibrary.ReportingService.getRequestsByCategoryResponse RequestForQuoteServicesModuleLibrary.ReportingService.ReportingController.EndgetRequestsByCategory(System.IAsyncResult result) {
            return base.Channel.EndgetRequestsByCategory(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public requestCountReportDataImpl[] EndgetRequestsByCategory(System.IAsyncResult result) {
            RequestForQuoteServicesModuleLibrary.ReportingService.getRequestsByCategoryResponse retVal = ((RequestForQuoteServicesModuleLibrary.ReportingService.ReportingController)(this)).EndgetRequestsByCategory(result);
            return retVal.@return;
        }
        
        private System.IAsyncResult OnBegingetRequestsByCategory(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string categoryType = ((string)(inValues[0]));
            System.DateTime fromDate = ((System.DateTime)(inValues[1]));
            int minimumCount = ((int)(inValues[2]));
            return this.BegingetRequestsByCategory(categoryType, fromDate, minimumCount, callback, asyncState);
        }
        
        private object[] OnEndgetRequestsByCategory(System.IAsyncResult result) {
            requestCountReportDataImpl[] retVal = this.EndgetRequestsByCategory(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetRequestsByCategoryCompleted(object state) {
            if ((this.getRequestsByCategoryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getRequestsByCategoryCompleted(this, new getRequestsByCategoryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getRequestsByCategoryAsync(string categoryType, System.DateTime fromDate, int minimumCount) {
            this.getRequestsByCategoryAsync(categoryType, fromDate, minimumCount, null);
        }
        
        public void getRequestsByCategoryAsync(string categoryType, System.DateTime fromDate, int minimumCount, object userState) {
            if ((this.onBegingetRequestsByCategoryDelegate == null)) {
                this.onBegingetRequestsByCategoryDelegate = new BeginOperationDelegate(this.OnBegingetRequestsByCategory);
            }
            if ((this.onEndgetRequestsByCategoryDelegate == null)) {
                this.onEndgetRequestsByCategoryDelegate = new EndOperationDelegate(this.OnEndgetRequestsByCategory);
            }
            if ((this.ongetRequestsByCategoryCompletedDelegate == null)) {
                this.ongetRequestsByCategoryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetRequestsByCategoryCompleted);
            }
            base.InvokeAsync(this.onBegingetRequestsByCategoryDelegate, new object[] {
                        categoryType,
                        fromDate,
                        minimumCount}, this.onEndgetRequestsByCategoryDelegate, this.ongetRequestsByCategoryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RequestForQuoteServicesModuleLibrary.ReportingService.getGreeksByCategoryResponse RequestForQuoteServicesModuleLibrary.ReportingService.ReportingController.getGreeksByCategory(RequestForQuoteServicesModuleLibrary.ReportingService.getGreeksByCategory request) {
            return base.Channel.getGreeksByCategory(request);
        }
        
        public greeksPerCategoryReportDataImpl[] getGreeksByCategory(string categoryType, string[] greeksToBeIncluded, System.DateTime MaturityDatefrom, System.DateTime MaturityDateTo, double minimumGreek) {
            RequestForQuoteServicesModuleLibrary.ReportingService.getGreeksByCategory inValue = new RequestForQuoteServicesModuleLibrary.ReportingService.getGreeksByCategory();
            inValue.categoryType = categoryType;
            inValue.greeksToBeIncluded = greeksToBeIncluded;
            inValue.MaturityDatefrom = MaturityDatefrom;
            inValue.MaturityDateTo = MaturityDateTo;
            inValue.minimumGreek = minimumGreek;
            RequestForQuoteServicesModuleLibrary.ReportingService.getGreeksByCategoryResponse retVal = ((RequestForQuoteServicesModuleLibrary.ReportingService.ReportingController)(this)).getGreeksByCategory(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult RequestForQuoteServicesModuleLibrary.ReportingService.ReportingController.BegingetGreeksByCategory(RequestForQuoteServicesModuleLibrary.ReportingService.getGreeksByCategory request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetGreeksByCategory(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetGreeksByCategory(string categoryType, string[] greeksToBeIncluded, System.DateTime MaturityDatefrom, System.DateTime MaturityDateTo, double minimumGreek, System.AsyncCallback callback, object asyncState) {
            RequestForQuoteServicesModuleLibrary.ReportingService.getGreeksByCategory inValue = new RequestForQuoteServicesModuleLibrary.ReportingService.getGreeksByCategory();
            inValue.categoryType = categoryType;
            inValue.greeksToBeIncluded = greeksToBeIncluded;
            inValue.MaturityDatefrom = MaturityDatefrom;
            inValue.MaturityDateTo = MaturityDateTo;
            inValue.minimumGreek = minimumGreek;
            return ((RequestForQuoteServicesModuleLibrary.ReportingService.ReportingController)(this)).BegingetGreeksByCategory(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RequestForQuoteServicesModuleLibrary.ReportingService.getGreeksByCategoryResponse RequestForQuoteServicesModuleLibrary.ReportingService.ReportingController.EndgetGreeksByCategory(System.IAsyncResult result) {
            return base.Channel.EndgetGreeksByCategory(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public greeksPerCategoryReportDataImpl[] EndgetGreeksByCategory(System.IAsyncResult result) {
            RequestForQuoteServicesModuleLibrary.ReportingService.getGreeksByCategoryResponse retVal = ((RequestForQuoteServicesModuleLibrary.ReportingService.ReportingController)(this)).EndgetGreeksByCategory(result);
            return retVal.@return;
        }
        
        private System.IAsyncResult OnBegingetGreeksByCategory(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string categoryType = ((string)(inValues[0]));
            string[] greeksToBeIncluded = ((string[])(inValues[1]));
            System.DateTime MaturityDatefrom = ((System.DateTime)(inValues[2]));
            System.DateTime MaturityDateTo = ((System.DateTime)(inValues[3]));
            double minimumGreek = ((double)(inValues[4]));
            return this.BegingetGreeksByCategory(categoryType, greeksToBeIncluded, MaturityDatefrom, MaturityDateTo, minimumGreek, callback, asyncState);
        }
        
        private object[] OnEndgetGreeksByCategory(System.IAsyncResult result) {
            greeksPerCategoryReportDataImpl[] retVal = this.EndgetGreeksByCategory(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetGreeksByCategoryCompleted(object state) {
            if ((this.getGreeksByCategoryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getGreeksByCategoryCompleted(this, new getGreeksByCategoryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getGreeksByCategoryAsync(string categoryType, string[] greeksToBeIncluded, System.DateTime MaturityDatefrom, System.DateTime MaturityDateTo, double minimumGreek) {
            this.getGreeksByCategoryAsync(categoryType, greeksToBeIncluded, MaturityDatefrom, MaturityDateTo, minimumGreek, null);
        }
        
        public void getGreeksByCategoryAsync(string categoryType, string[] greeksToBeIncluded, System.DateTime MaturityDatefrom, System.DateTime MaturityDateTo, double minimumGreek, object userState) {
            if ((this.onBegingetGreeksByCategoryDelegate == null)) {
                this.onBegingetGreeksByCategoryDelegate = new BeginOperationDelegate(this.OnBegingetGreeksByCategory);
            }
            if ((this.onEndgetGreeksByCategoryDelegate == null)) {
                this.onEndgetGreeksByCategoryDelegate = new EndOperationDelegate(this.OnEndgetGreeksByCategory);
            }
            if ((this.ongetGreeksByCategoryCompletedDelegate == null)) {
                this.ongetGreeksByCategoryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetGreeksByCategoryCompleted);
            }
            base.InvokeAsync(this.onBegingetGreeksByCategoryDelegate, new object[] {
                        categoryType,
                        greeksToBeIncluded,
                        MaturityDatefrom,
                        MaturityDateTo,
                        minimumGreek}, this.onEndgetGreeksByCategoryDelegate, this.ongetGreeksByCategoryCompletedDelegate, userState);
        }
    }
}
