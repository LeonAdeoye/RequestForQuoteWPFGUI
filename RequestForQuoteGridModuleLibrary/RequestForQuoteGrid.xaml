<UserControl x:Class="RequestForQuoteGridModuleLibrary.RequestForQuoteGrid"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             mc:Ignorable="d"             
             xmlns:enums="clr-namespace:RequestForQuoteInterfacesLibrary.Enums;assembly=RequestForQuoteInterfacesLibrary"
             xmlns:attached="clr-namespace:RequestForQuoteInterfacesLibrary.AttachedCommandBehaviour;assembly=RequestForQuoteInterfacesLibrary"
             xmlns:CustomCntls="clr-namespace:WPFStyley_Metallic4.CustomControls;assembly=WPFStyley_Metallic4"
             xmlns:markupExtensions="clr-namespace:RequestForQuoteInterfacesLibrary.MarkupExtensions;assembly=RequestForQuoteInterfacesLibrary"
             PresentationTraceSources.TraceLevel="High">
    <Grid>
        <CustomCntls:MetallicBorder WpfsCornerRadius="4" />
        <DataGrid x:Name="RequestForQuoteDataGrid" 
                  AutoGenerateColumns="false" FrozenColumnCount="1" ItemsSource="{Binding Requests, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                  SelectedItem="{Binding SelectedRequest, Mode=TwoWay}" 
                  CellEditEnding="HandleDataGridCellEditEnding"
                  attached:CommandBehavior.Event="MouseDoubleClick"
                  attached:CommandBehavior.Command="{Binding ShowRequestDetailsWindowCommand}" 
                  VerticalAlignment="Stretch"
                  RowHeaderWidth="0"
                  Background="Transparent">            
               
            <DataGrid.Columns>
                <DataGridTextColumn IsReadOnly="True" Binding="{Binding Path=Request}" Header="Snippet"/>
                <DataGridTextColumn IsReadOnly="True"  Binding="{Binding Path=Identifier}" Header="Identifier"/>
            
                <DataGridTemplateColumn Header="Status">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Path=Status, Converter={StaticResource EnumDescriptionConverter}}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <ComboBox  SelectedValue="{Binding Status}"
                                DisplayMemberPath="Description"
                                SelectedValuePath="Value"                                              
                                ItemsSource="{Binding Source={markupExtensions:Enumeration {x:Type enums:StatusEnum}}}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Picked Up By">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <Button FontSize="9" Content="Pick Up" Command="{Binding DataContext.PickUpRequestCommand, 
                                    RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}">
                                    <Button.Style>
                                        <Style BasedOn="{StaticResource WpfsQuietButton}" TargetType="{x:Type Button}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Status}" Value="{x:Static enums:StatusEnum.PENDING}">
                                                    <Setter Property="Button.Visibility" Value="Visible"/>                                                  
                                                </DataTrigger>                                              
                                            </Style.Triggers>
                                            <Setter Property="Button.Visibility" Value="Collapsed"/>
                                        </Style>                                    
                                    </Button.Style>
                                </Button>
                                <TextBlock Text="{Binding PickedUpBy}">
                                    <TextBlock.Style>
                                        <Style>
                                            <Style.Triggers>                                               
                                                <DataTrigger Binding="{Binding Status}" Value="{x:Static enums:StatusEnum.PENDING}">
                                                    <Setter Property="TextBlock.Visibility" Value="Collapsed"/>    
                                                </DataTrigger>
                                            </Style.Triggers>
                                            <Setter Property="TextBlock.Visibility" Value="Visible"/>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Client">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Path=Client.Name}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate> 
                            <ComboBox ItemsSource="{Binding Path=DataContext.Clients,
                                      RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Mode=TwoWay}"
                                      SelectedItem="{Binding Client}" DisplayMemberPath="Name"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Book">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Path=BookCode}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <ComboBox ItemsSource="{Binding Path=DataContext.Books,
                                      RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Mode=TwoWay}"
                                      SelectedValue="{Binding BookCode}" SelectedValuePath="BookCode" DisplayMemberPath="BookCode"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>


                <DataGridTextColumn Binding="{Binding Path=TradeDate, Converter={StaticResource DateFormatter}, ConverterParameter='dd MMM yyyy'}" Header="Trade Date"/>
                <DataGridTextColumn IsReadOnly="True" Binding="{Binding StringFormat={}{0:F4}, Path=PremiumAmount}" Header="Price"/>
                <DataGridTextColumn IsReadOnly="True" Binding="{Binding StringFormat={}{0:F4}, Path=Delta}" Header="Delta"/>
                <DataGridTextColumn IsReadOnly="True" Binding="{Binding StringFormat={}{0:F4}, Path=Gamma}" Header="Gamma"/>
                <DataGridTextColumn IsReadOnly="True" Binding="{Binding StringFormat={}{0:F4}, Path=Theta}" Header="Theta"/>
                <DataGridTextColumn IsReadOnly="True" Binding="{Binding StringFormat={}{0:F4}, Path=Vega}" Header="Vega"/>
                <DataGridTextColumn IsReadOnly="True" Binding="{Binding StringFormat={}{0:F4}, Path=Rho}" Header="Rho"/>
            </DataGrid.Columns>
            <DataGrid.GroupStyle>
                <GroupStyle>
                    <GroupStyle.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Path=Name}" FontSize="15"/>
                        </DataTemplate>
                    </GroupStyle.HeaderTemplate>

                    <GroupStyle.ContainerStyle>
                        <Style TargetType="{x:Type GroupItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type GroupItem}">
                                        <Expander IsExpanded="True">
                                            <Expander.Header>
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Text="{Binding Path=Name}" />
                                                    <TextBlock Text="{Binding Path=ItemCount}" Margin="8,0,4,0"/>
                                                    <TextBlock Text="Element(s)"/>
                                                </StackPanel>
                                            </Expander.Header>
                                            <ItemsPresenter />
                                        </Expander>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>
                </GroupStyle>

            </DataGrid.GroupStyle>
              <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Saves Changes To Request" Command="{Binding SaveChangesToRequestCommand}"></MenuItem>
                    <MenuItem Header="Clone Request" Command="{Binding CloneRequestCommand}"></MenuItem>
                    <MenuItem Header="Calculate Request" Command="{Binding CalculateRequestCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Header}" ></MenuItem>
                    <MenuItem Header="Invalidate Request" Command="{Binding InvalidateRequestCommand}"></MenuItem>
                    <MenuItem Header="Delete Request" Command="{Binding DeleteRequestCommand}"></MenuItem>
                
                    <MenuItem Header="Change Status Of Request">
                        <MenuItem Header="Pending pick up" Command="{Binding ChangeStatusOfRequestCommand}" CommandParameter="PENDING"></MenuItem>                        
                        <MenuItem Header="Picked up"  Command="{Binding ChangeStatusOfRequestCommand}" CommandParameter="PICKEDUP"></MenuItem>
                        <MenuItem Header="Filled"  Command="{Binding ChangeStatusOfRequestCommand}" CommandParameter="FILLED"></MenuItem>
                        <MenuItem Header="Traded away"  Command="{Binding ChangeStatusOfRequestCommand}" CommandParameter="TRADEDAWAY"></MenuItem>
                        <MenuItem Header="Invalid"  Command="{Binding ChangeStatusOfRequestCommand}" CommandParameter="INVALID"></MenuItem>
                    </MenuItem>
                
                    <MenuItem Header="Group By">
                        <MenuItem Header="Client" Command="{Binding GroupByCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Header}"></MenuItem>
                        <MenuItem Header="Underlying"  Command="{Binding GroupByCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Header}"></MenuItem>
                        <MenuItem Header="MaturityDate"  Command="{Binding GroupByCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Header}"></MenuItem>
                        <MenuItem Header="Status"  Command="{Binding GroupByCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Header}"></MenuItem>
                        <MenuItem Header="Initiator"  Command="{Binding GroupByCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Header}"></MenuItem>
                    </MenuItem>
                
                    <MenuItem Header="Undo Grouping" Command="{Binding GroupByCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Header}"></MenuItem>
                </ContextMenu>
            </DataGrid.ContextMenu>
        </DataGrid>
    </Grid>
</UserControl>
